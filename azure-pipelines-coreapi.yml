# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: Whetstone.StoryEngine Core API Build Only

workspace:
    clean: all

trigger:
- master

variables:
  buildnum: 1.0.$(Build.BuildId)
  packagefolder: $(Build.ArtifactStagingDirectory)/nuget

pool:
  name: AWSBuild

steps:

- task: DotNetCoreCLI@2
  displayName: 'Install Global Amazon.Lambda.Tools'
  inputs:
    command: 'custom'
    custom: 'tool'
    arguments: 'update --tool-path=/usr/local/sbin Amazon.Lambda.Tools --version 4.0'
    
- script: |
   git config --global user.email "builduser@whetstonetechnologies.io"
   git config --global user.name "Build User"
  displayName: 'Set git user info'
  env:
    BUILDNUM: 1.0.$(Build.BuildId)

- task: DotNetCoreCLI@2
  displayName: 'Restore Packages'
  inputs:
    command: restore
    projects: |
     $(Build.Repository.LocalPath)/src/Whetstone.StoryEngine.Cache/Whetstone.StoryEngine.Cache.csproj
     $(Build.Repository.LocalPath)/src/Whetstone.StoryEngine/Whetstone.StoryEngine.csproj
     $(Build.Repository.LocalPath)/src/Whetstone.StoryEngine.Cache.DynamoDB/Whetstone.StoryEngine.Cache.DynamoDB.csproj
     $(Build.Repository.LocalPath)/src/Whetstone.StoryEngine.Models/Whetstone.StoryEngine.Models.csproj
     $(Build.Repository.LocalPath)/src/Whetstone.StoryEngine.Data/Whetstone.StoryEngine.Data.csproj    
     $(Build.Repository.LocalPath)/src/Whetstone.StoryEngine.Repository/Whetstone.StoryEngine.Repository.csproj
     $(Build.Repository.LocalPath)/src/Whetstone.StoryEngine.DependencyInjection/Whetstone.StoryEngine.DependencyInjection.csproj
     $(Build.Repository.LocalPath)/src/Whetstone.StoryEngine.AlexaProcessor/Whetstone.StoryEngine.AlexaProcessor.csproj
     $(Build.Repository.LocalPath)/src/Whetstone.StoryEngine.Bixby.Repository/Whetstone.StoryEngine.Bixby.Repository.csproj
     $(Build.Repository.LocalPath)/src/Whetstone.StoryEngine.Google.Repository/Whetstone.StoryEngine.Google.Repository.csproj
     $(Build.Repository.LocalPath)/src/Whetstone.Queue.SessionLogger.Repository/Whetstone.Queue.SessionLogger.Repository.csproj
     $(Build.Repository.LocalPath)/src/Whetstone.Queue.SessionLogger/Whetstone.Queue.SessionLogger.csproj
     $(Build.Repository.LocalPath)/src/Whetstone.Queue.TwiliosStatusUpdate/Whetstone.Queue.TwiliosStatusUpdate.csproj
     $(Build.Repository.LocalPath)/src/Whetstone.Sms.Lambda/Whetstone.Sms.Lambda.csproj
     $(Build.Repository.LocalPath)/src/Whetstone.StoryEngine.MessageSender/Whetstone.StoryEngine.MessageSender.csproj
     $(Build.Repository.LocalPath)/src/Whetstone.StoryEngine.Reporting.Models/Whetstone.StoryEngine.Reporting.Models.csproj
     $(Build.Repository.LocalPath)/src/Whetstone.StoryEngine.Reporting.ReportRepository/Whetstone.StoryEngine.Reporting.ReportRepository.csproj
     $(Build.Repository.LocalPath)/src/Whetstone.StoryEngine.Reporting.ReportGenerator/Whetstone.StoryEngine.Reporting.ReportGenerator.csproj
     $(Build.Repository.LocalPath)/src/Whetstone.StoryEngine.WebLibrary/Whetstone.StoryEngine.WebLibrary.csproj
     $(Build.Repository.LocalPath)/src/Whetstone.StoryEngine.CoreApi/Whetstone.StoryEngine.CoreApi.csproj
     $(Build.Repository.LocalPath)/src/Whetstone.StoryEngine.LambdaUtilities/Whetstone.StoryEngine.LambdaUtilities.csproj
     **/Whetstone.StoryEngine.UnitTests/*.csproj
     
    vstsFeed: '/983e9cfd-40a2-453c-9abe-eb0f3b95ddeb'



- script: |
   dotnet-lambda package -ot ./coreapi-lambda-native.zip --disable-interactive true --no-restore --framework "netcoreapp3.1" --configuration Release --msbuild-parameters "--self-contained true /p:PublishReadyToRun=true"
   mkdir $nativeoutdir
   cp ./coreapi-lambda-native.zip $nativeoutdir/coreapi-lambda-native.zip
   echo  "copied ./coreapi-lambda-native.zip to $nativeoutdir/coreapi-lambda-native.zip"
   cp ./coreapiserverless.template $nativeoutdir/coreapi-lambda-native.template
   echo  "copied ./coreapiserverless.template to $nativeoutdir/coreapi-lambda-native.template"
  displayName: 'Package Core API Native'
  workingDirectory: $(Build.Repository.LocalPath)/src/Whetstone.StoryEngine.CoreApi
  env:
    nativeoutdir: $(build.artifactstagingdirectory)/native

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'