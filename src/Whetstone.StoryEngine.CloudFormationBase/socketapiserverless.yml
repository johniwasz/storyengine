AWSTemplateFormatVersion: 2010-09-09
Description: Socket API
Parameters:
  SocketAuthStack:
    Default: Whetstone-SocketAuth-Dev
    AllowedPattern: '^[a-zA-Z]+[0-9a-zA-Z\-]*$'
    Type: String
    Description: >-
      Name of stack used to create the authorizer lambda for our Websocket
      implementation. Example: Whetstone-SocketAuth-Dev
  SocketHandlerStack:
    Default: Whetstone-SocketHandler-Dev
    AllowedPattern: '^[a-zA-Z]+[0-9a-zA-Z\-]*$'
    Type: String
    Description: >-
      Name of stack used to create the socket handler lambda for our Websocket
      implementation. Example: Whetstone-SocketAuth-Dev
  KeyStack:
    Default: WhetstoneKey-Dev
    AllowedPattern: '^[a-zA-Z]+[0-9a-zA-Z\-]*$'
    Type: String
    Description: >-
      Name of stack used to create environment key for decryption. Example:
      WhetstoneKey-Dev
  PolicyStack:
    Default: WhetstoneSharedPolicies-Dev
    AllowedPattern: '^[a-zA-Z]+[0-9a-zA-Z\-]*$'
    Type: String
    Description: >-
      Name of stack used to create supplemental policies. Example:
      WhetstoneSharedPolicies-Dev
  CustomActionLambdaStack:
    Default: Whetstone-LambdaCustomActions-Dev
    Type: String
    Description: Stack that defines lambdas for custom resources
Resources:
  WhetstoneSocketApiUsage:
    Type: 'AWS::ApiGateway::UsagePlan'
    Properties:
      ApiStages:
        - ApiId: !Sub '${WhetstoneSocketApi}'
          Stage: Prod
      UsagePlanName: !Join 
        - ''
        - - 'Whetstone Socket API '
          - !ImportValue 
            'Fn::Sub': '${KeyStack}-EnvironmentName'
          - ' Usage Plan'
      Description: !Join 
        - ''
        - - 'For use with the Core '
          - !ImportValue 
            'Fn::Sub': '${KeyStack}-EnvironmentName'
          - ' API'
    DependsOn:
      - WhetstoneSocketApi
      - Stage
  WebSocketKey:
    Type: 'AWS::ApiGateway::ApiKey'
    Properties:
      Enabled: true
      Description: !Join 
        - ''
        - - 'For use with the Story Engine Websocket '
          - !ImportValue 
            'Fn::Sub': '${KeyStack}-EnvironmentName'
          - ' API'
      Name: !Join 
        - ''
        - - 'Whetstone Websocket '
          - !ImportValue 
            'Fn::Sub': '${KeyStack}-EnvironmentName'
          - ' API Key'
  WhetstoneSocketApi:
    Type: 'AWS::ApiGatewayV2::Api'
    Properties:
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: $request.body.message
      Name: !Join 
        - ''
        - - WhetstoneSocketApi-
          - !ImportValue 
            'Fn::Sub': '${KeyStack}-EnvironmentName'
      ApiKeySelectionExpression: $context.authorizer.usageIdentifierKey
  UsagePlanKey:
    Type: 'AWS::ApiGateway::UsagePlanKey'
    Properties:
      KeyType: API_KEY
      KeyId: !Ref WebSocketKey
      UsagePlanId: !Ref WhetstoneSocketApiUsage
    DependsOn:
      - WebSocketKey
      - WhetstoneSocketApiUsage
  BootstrapConfigUpdate:
    Type: 'AWS::CloudFormation::CustomResource'
    Properties:
      Parameter: !ImportValue 
        'Fn::Sub': '${PolicyStack}-BootstrapParameter'
      KeyId: !ImportValue 
        'Fn::Sub': '${KeyStack}-EnvironmentKeyAlias'
      ServiceToken: !ImportValue 
        'Fn::Sub': '${CustomActionLambdaStack}-BootstrapConfigUpdateArn'
      ConfigEntries:
        - ConfigType: SocketWriteEndpoint
          Value: !Join 
            - ''
            - - 'https://'
              - !Ref WhetstoneSocketApi
              - .execute-api.
              - !Ref 'AWS::Region'
              - .amazonaws.com/
              - !Ref Stage
    DependsOn:
      - WhetstoneSocketApi
      - Stage
  ConnectInteg:
    Type: 'AWS::ApiGatewayV2::Integration'
    Properties:
      IntegrationType: AWS_PROXY
      ApiId: !Ref WhetstoneSocketApi
      IntegrationUri: !Sub 
        - >-
          arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${function}/invocations
        - function: !ImportValue 
            'Fn::Sub': '${SocketHandlerStack}-SocketHandlerLiveArn'
          region: !Ref 'AWS::Region'
  SendMessageRoute:
    Type: 'AWS::ApiGatewayV2::Route'
    Properties:
      ApiId: !Ref WhetstoneSocketApi
      OperationName: ConnectRoute
      RouteKey: sendMessage
      AuthorizationType: NONE
      Target: !Join 
        - /
        - - integrations
          - !Ref SendMessageInteg
  WhetstoneSocketAuthorizerRole:
    Type: 'AWS::IAM::Role'
    Properties:
      Policies:
        - PolicyName: lambda
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action: 'lambda:invokeFunction'
                Resource: !ImportValue 
                  'Fn::Sub': '${SocketAuthStack}-SocketAuthLiveArn'
                Effect: Allow
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
  DisconnectRoute:
    Type: 'AWS::ApiGatewayV2::Route'
    Properties:
      ApiId: !Ref WhetstoneSocketApi
      OperationName: ConnectRoute
      RouteKey: $disconnect
      AuthorizationType: NONE
      Target: !Join 
        - /
        - - integrations
          - !Ref DisconnectInteg
  SocketHandlerPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !ImportValue 
        'Fn::Sub': '${SocketHandlerStack}-SocketHandlerLiveArn'
      Principal: apigateway.amazonaws.com
    DependsOn:
      - WhetstoneSocketApi
  ConnectRoute:
    Type: 'AWS::ApiGatewayV2::Route'
    Properties:
      Target: !Join 
        - /
        - - integrations
          - !Ref ConnectInteg
      ApiId: !Ref WhetstoneSocketApi
      OperationName: ConnectRoute
      ApiKeyRequired: true
      RouteKey: $connect
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref WhetstoneSocketAuthorizer
    DependsOn:
      - WhetstoneSocketApi
  SendMessageInteg:
    Type: 'AWS::ApiGatewayV2::Integration'
    Properties:
      IntegrationType: AWS_PROXY
      ApiId: !Ref WhetstoneSocketApi
      IntegrationUri: !Sub 
        - >-
          arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${function}:LIVE/invocations
        - function: !ImportValue 
            'Fn::Sub': '${SocketHandlerStack}-SocketHandlerLiveArn'
          region: !Ref 'AWS::Region'
  DisconnectInteg:
    Type: 'AWS::ApiGatewayV2::Integration'
    Properties:
      IntegrationType: AWS_PROXY
      ApiId: !Ref WhetstoneSocketApi
      IntegrationUri: !Sub 
        - >-
          arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${function}/invocations
        - function: !ImportValue 
            'Fn::Sub': '${SocketHandlerStack}-SocketHandlerLiveArn'
          region: !Ref 'AWS::Region'
  WhetstoneSocketAuthorizer:
    Type: 'AWS::ApiGatewayV2::Authorizer'
    Properties:
      Name: !Join 
        - ''
        - - Whetstone-Socket-API-
          - !ImportValue 
            'Fn::Sub': '${KeyStack}-EnvironmentName'
          - '-Authorizer'
      ApiId: !Ref WhetstoneSocketApi
      AuthorizerUri: !Join 
        - ''
        - - 'arn:aws:apigateway:'
          - !Ref 'AWS::Region'
          - ':lambda:path/2015-03-31/functions/'
          - !ImportValue 
            'Fn::Sub': '${SocketAuthStack}-SocketAuthArn'
          - ':LIVE/invocations'
      AuthorizerType: REQUEST
      IdentitySource:
        - route.request.querystring.auth
        - route.request.querystring.api
        - route.request.querystring.clientId
      AuthorizerCredentialsArn: !GetAtt 
        - WhetstoneSocketAuthorizerRole
        - Arn
    DependsOn:
      - WhetstoneSocketApi
      - WhetstoneSocketAuthorizerRole
  Stage:
    Type: 'AWS::ApiGatewayV2::Stage'
    Properties:
      AutoDeploy: true
      ApiId: !Ref WhetstoneSocketApi
      DefaultRouteSettings:
        DetailedMetricsEnabled: true
        DataTraceEnabled: true
        LoggingLevel: INFO
      StageName: Prod
Outputs:
  WebSocketURI:
    Description: The WSS Protocol URI to connect to
    Value: !Join 
      - ''
      - - 'wss://'
        - !Ref WhetstoneSocketApi
        - .execute-api.
        - !Ref 'AWS::Region'
        - .amazonaws.com/
        - !Ref Stage
  WebSocketConnectionURI:
    Description: The WebSocket Endpoint URI to use for writing to connections
    Value: !Join 
      - ''
      - - 'https://'
        - !Ref WhetstoneSocketApi
        - .execute-api.
        - !Ref 'AWS::Region'
        - .amazonaws.com/
        - !Ref Stage