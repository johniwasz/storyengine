AWSTemplateFormatVersion: 2010-09-09
Description: Create the SoniBridge Buckets
Parameters:
  KeyStack:
    Description: >-
      Name of stack used to create environment key for decryption. Example:
      WhetstoneKey-Dev
    Type: String
  CustomActionLambdaStack:
    Description: >-
      Lambda utility stack. Example:
      Whetstone-LambdaCustomActions-Dev
    Type: String
    Default: Whetstone-LambdaCustomActions-Dev
  PolicyStack:
    Description: >-
      Shared policies stack. Example:
      WhetstoneSharedPolicies-Dev
    Type: String
    Default: WhetstoneSharedPolicies-Dev
Resources:
  BootstrapConfigUpdate:
    Type: 'AWS::CloudFormation::CustomResource'
    Properties:
      ServiceToken: !ImportValue
        'Fn::Sub': '${CustomActionLambdaStack}-BootstrapConfigUpdateArn'
      KeyId: !ImportValue
        'Fn::Sub': '${KeyStack}-EnvironmentKeyAlias'
      Parameter: !ImportValue
        'Fn::Sub': '${PolicyStack}-BootstrapParameter'
      ConfigEntries:
        - ConfigType: ReportBucket
          Value: !Ref ReportingBucket
        - ConfigType: TitleBucket
          Value: !Ref S3Bucket
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Retain
    Properties:
      AccessControl: PublicRead
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: false
        BlockPublicPolicy: false
        RestrictPublicBuckets: false
      CorsConfiguration:
        CorsRules:
          - AllowedMethods:
              - GET
            AllowedOrigins:
              - 'http://ask-ifr-download.s3.amazonaws.com'
          - AllowedMethods:
              - GET
            AllowedOrigins:
              - 'https://ask-ifr-download.s3.amazonaws.com'
      Tags:
        - Key: Environment
          Value: !ImportValue
            'Fn::Sub': '${KeyStack}-EnvironmentName'
        - Key: Purpose
          Value: !ImportValue
            'Fn::Sub': '${KeyStack}-Purpose'
        - Key: Stack
          Value: !Ref 'AWS::StackName'
        - Key: Name
          Value: !Join
            - '-'
            - - !ImportValue
                'Fn::Sub': '${KeyStack}-EnvironmentName'
              - key
              - !Ref 'AWS::StackName'
  BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    DeletionPolicy: Retain
    Properties:
      PolicyDocument:
        Id: !Join
          - '-'
          - - !ImportValue
              'Fn::Sub': '${KeyStack}-EnvironmentName'
            - bucketpolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource:
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref S3Bucket
                  - /global/image/*
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref S3Bucket
                  - /global/audio/*
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref S3Bucket
                  - /stories/*/audio/*
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref S3Bucket
                  - /stories/*/image/*
            Condition:
              Bool:
                aws:SecureTransport: true
          - Sid: Enforce HTTPS Connections
            Action: s3:*
            Effect: Deny
            Principal: '*'
            Resource:
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref S3Bucket
                  - /*
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref S3Bucket
                  - /global/image/*
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref S3Bucket
                  - /global/audio/*
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref S3Bucket
                  - /stories/*/audio/*
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref S3Bucket
                  - /stories/*/image/*
            Condition:
              Bool:
                aws:SecureTransport: false
      Bucket: !Ref S3Bucket
  BucketReaderPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    DeletionPolicy: Delete
    Properties:
      Path: !Join
        - ''
        - - /
          - !ImportValue
            'Fn::Sub': '${KeyStack}-EnvironmentName'
          - /
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: 's3:GetObject'
            Resource: !Join
              - /
              - - !GetAtt
                  - S3Bucket
                  - Arn
                - '*'
  BucketWriterPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    DeletionPolicy: Delete
    Properties:
      Path: !Join
        - ''
        - - /
          - !ImportValue
            'Fn::Sub': '${KeyStack}-EnvironmentName'
          - /
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 's3:PutObject'
              - 's3:GetObject'
              - 's3:DeleteObject'
            Resource: !Join
              - /
              - - !GetAtt
                  - S3Bucket
                  - Arn
                - '*'
          - Effect: Allow
            Action:
              - 's3:ListBucket'
            Resource: !GetAtt
              - S3Bucket
              - Arn
  ReportingBucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Retain
    Properties:
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID:
                { 'Fn::ImportValue': !Sub '${KeyStack}-EnvironmentKeyAlias' }
              SSEAlgorithm: 'aws:kms'
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Environment
          Value: !ImportValue
            'Fn::Sub': '${KeyStack}-EnvironmentName'
        - Key: Purpose
          Value: !ImportValue
            'Fn::Sub': '${KeyStack}-Purpose'
        - Key: Stack
          Value: !Ref 'AWS::StackName'
        - Key: Name
          Value: !Join
            - '-'
            - - !ImportValue
                'Fn::Sub': '${KeyStack}-EnvironmentName'
              - key
              - !Ref 'AWS::StackName'
  ReportingBucketReaderPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    DeletionPolicy: Delete
    Properties:
      Path: !Join
        - ''
        - - /
          - !ImportValue
            'Fn::Sub': '${KeyStack}-EnvironmentName'
          - /
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: 's3:GetObject'
            Resource: !Join
              - /
              - - !GetAtt
                  - ReportingBucket
                  - Arn
                - '*'
  ReportingBucketWriterPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    DeletionPolicy: Delete
    Properties:
      Path: !Join
        - ''
        - - /
          - !ImportValue
            'Fn::Sub': '${KeyStack}-EnvironmentName'
          - /
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 's3:PutObject'
              - 's3:GetObject'
              - 's3:DeleteObject'
            Resource: !Join
              - /
              - - !GetAtt
                  - ReportingBucket
                  - Arn
                - '*'
          - Effect: Allow
            Action:
              - 's3:ListBucket'
            Resource: !GetAtt
              - ReportingBucket
              - Arn
  ReportingBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    DeletionPolicy: Retain
    Properties:
      PolicyDocument:
        Id: !Join
          - '-'
          - - !ImportValue
              'Fn::Sub': '${KeyStack}-EnvironmentName'
            - reportingbucketpolicy
        Version: 2012-10-17
        Statement:
          - Sid: Enforce HTTPS Connections
            Action: s3:*
            Effect: Deny
            Principal: '*'
            Resource:
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref ReportingBucket
                  - /*
            Condition:
              Bool:
                aws:SecureTransport: false
      Bucket: !Ref ReportingBucket
Outputs:
  BucketArn:
    Description: ARN of the StoryEngine Bucket
    Value: !GetAtt
      - S3Bucket
      - Arn
    Export:
      Name: !Sub '${AWS::StackName}-StoryEngineBucketArn'
  BucketName:
    Description: Name of the StoryEngine Bucket
    Value: !Ref S3Bucket
    Export:
      Name: !Sub '${AWS::StackName}-StoryEngineBucketName'
  BucketReaderPolicy:
    Description: Name of the policy to grant read access to the bucket
    Value: !Ref BucketReaderPolicy
    Export:
      Name: !Sub '${AWS::StackName}-BucketReaderPolicy'
  BucketWriterPolicy:
    Description: Name of the policy to grant read/write access to the bucket
    Value: !Ref BucketWriterPolicy
    Export:
      Name: !Sub '${AWS::StackName}-BucketWriterPolicy'
  ReportingBucketArn:
    Description: ARN of the Reporting Bucket
    Value: !GetAtt
      - ReportingBucket
      - Arn
    Export:
      Name: !Sub '${AWS::StackName}-ReportingBucketArn'
  ReportingBucketName:
    Description: Name of the Reporting SoniBridge Bucket
    Value: !Ref ReportingBucket
    Export:
      Name: !Sub '${AWS::StackName}-ReportingBucketName'
  ReportingBucketReaderPolicy:
    Description: Name of the policy to grant read access to the reporting bucket
    Value: !Ref ReportingBucketReaderPolicy
    Export:
      Name: !Sub '${AWS::StackName}-ReportingBucketReaderPolicy'
  ReportingBucketWriterPolicy:
    Description: Name of the policy to grant read/write access to the reporting bucket
    Value: !Ref ReportingBucketWriterPolicy
    Export:
      Name: !Sub '${AWS::StackName}-ReportingBucketWriterPolicy'