{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description"              : "Create the Story Engine bucket and queues",
    "Parameters"               : {
        "BucketNameParam" : {
            "Description" : "Bucket Name",
            "Type"        : "String",
            "Default"     : "storyengine"
        },
        "EnvironmentNameParam" : {
            "Description" : "Environment Name is attached to the name of every resource created",
            "Type"        : "String",
            "Default"     : "prime"
        },
        "KeyStackParam"        : {
            "Description" : "Name of stack used to create environment key for decryption",
            "Type"        : "String"
        }
    },
    "Resources"                : {
        "SessionAuditQueueDeadLetter" : {
            "Type" : "AWS::SQS::Queue",
            "Properties" : {
                "QueueName" : {
                    "Fn::Join" : [
                        "-",
                        [
                            "sessionaudit",
                            {
                                "Ref" : "EnvironmentNameParam"
                            },
                            "deadletter"
                        ]
                    ]
                },
                "ReceiveMessageWaitTimeSeconds" : 20,
                "VisibilityTimeout"             : 30,
                "MessageRetentionPeriod"        : 1209600
            },
            "DeletionPolicy" : "Delete"
        },
        "SessionAuditQueue"           : {
            "Type" : "AWS::SQS::Queue",
            "DependsOn" : "SessionAuditQueueDeadLetter",
            "Properties" : {
                "QueueName" : {
                    "Fn::Join" : [
                        "-",
                        [
                            "sessionaudit",
                            {
                                "Ref" : "EnvironmentNameParam"
                            }
                        ]
                    ]
                },
                "ReceiveMessageWaitTimeSeconds" : 20,
                "VisibilityTimeout"             : 30,
                "MessageRetentionPeriod"        : 345600,
                "RedrivePolicy"                 : {
                    "deadLetterTargetArn" : {
                        "Fn::GetAtt" : [
                            "SessionAuditQueueDeadLetter",
                            "Arn"
                        ]
                    },
                    "maxReceiveCount"     : 6
                }
            },
            "DeletionPolicy" : "Delete"
        },
        "S3Bucket"                    : {
            "Type" : "AWS::S3::Bucket",
            "Properties"  : {
                "BucketName" : {
                    "Fn::Join" : [
                        "-",
                        [
                            {
                                "Ref" : "BucketNameParam"
                            },
                            {
                                "Ref" : "EnvironmentNameParam"
                            }
                        ]
                    ]
                },
                "AccessControl" : "PublicRead",
                "VersioningConfiguration" : {
                    "Status" : "Enabled"
                },
                "PublicAccessBlockConfiguration" : {
                    "BlockPublicAcls" : true,
                    "IgnorePublicAcls" : false,
                    "BlockPublicPolicy" : false,
                    "RestrictPublicBuckets" : false
                },
                "CorsConfiguration"              : {
                    "CorsRules" : [
                        {
                            "AllowedMethods" : [
                                "GET"
                            ],
                            "AllowedOrigins" : [
                                "http://ask-ifr-download.s3.amazonaws.com"
                            ]
                        },
                        {
                            "AllowedMethods" : [
                                "GET"
                            ],
                            "AllowedOrigins" : [
                                "https://ask-ifr-download.s3.amazonaws.com"
                            ]
                        }
                    ]
                }
            }
        },
        "LambdaSessionAuditReceiverRole" : {
            "Type" : "AWS::IAM::Role",
            "Properties" : {
                "RoleName" : {
                    "Fn::Join" : [
                        "-",
                        [
                            {
                                "Ref" : "EnvironmentNameParam"
                            },
                            "lambda",
                            "sessionaudit",
                            "reader"
                        ]
                    ]
                },
                "Policies" : [
                    {
                        "PolicyName" : "storyengineparameterreader",
                        "PolicyDocument" : {
                            "Version" : "2012-10-17",
                            "Statement" : [
                                {
                                    "Sid" : "ParameterReaderPermission",
                                    "Effect" : "Allow",
                                    "Action" : [
                                        "sms:GetParameter"
                                    ],
                                    "Resource" : {
                                        "Fn::Sub" : "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/storyengine/${EnvironmentNameParam}/*"
                                    }
                                }
                            ]
                        }
                    }
                ],
                "Path"     : {
                    "Fn::Join" : [
                        "",
                        [
                            "/",
                            {
                                "Ref" : "EnvironmentNameParam"
                            },
                            "/"
                        ]
                    ]
                },
                "ManagedPolicyArns" : [
				   "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
                    {
                        "Fn::ImportValue" : {
                            "Fn::Sub" : "${KeyStackParam}-EnvironmentKeyReaderPolicyArn"
                        }
                    }
                ],
                "AssumeRolePolicyDocument" : {
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Principal" : {
                                "Service" : "lambda.amazonaws.com"
                            },
                            "Action"    : "sts:AssumeRole"
                        }
                    ]
                }
            }
        },
        "LambdaStoryEngineMinimumRole"   : {
            "Type" : "AWS::IAM::Role",
            "DependsOn" : [
                "S3Bucket"
            ],
            "Properties" : {
                "RoleName" : {
                    "Fn::Join" : [
                        "-",
                        [
                            {
                                "Ref" : "EnvironmentNameParam"
                            },
                            "lambda",
                            "storyengineminimum"
                        ]
                    ]
                },
                "Policies" : [
                    {
                        "PolicyName" : "storyenginebucketaccess",
                        "PolicyDocument" : {
                            "Version" : "2012-10-17",
                            "Statement" : [
                                {
                                    "Effect" : "Allow",
                                    "Action" : "s3:GetObject",
                                    "Resource" : {
                                        "Fn::Join" : [
                                            "/",
                                            [
                                                {
                                                    "Fn::GetAtt" : [
                                                        "S3Bucket",
                                                        "Arn"
                                                    ]
                                                },
                                                "*"
                                            ]
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName" : "storyengineparameterreader",
                        "PolicyDocument" : {
                            "Version" : "2012-10-17",
                            "Statement" : [
                                {
                                    "Sid" : "ParameterReaderPermission",
                                    "Effect" : "Allow",
                                    "Action" : [
                                        "sms:GetParameter"
                                    ],
                                    "Resource" : {
                                        "Fn::Sub" : "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/storyengine/${EnvironmentNameParam}/*"
                                    }
                                }
                            ]
                        }
                    }
                ],
                "Path"     : {
                    "Fn::Join" : [
                        "",
                        [
                            "/",
                            {
                                "Ref" : "EnvironmentNameParam"
                            },
                            "/"
                        ]
                    ]
                },
                "ManagedPolicyArns" : [
				   "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaRole",
                    {
                        "Fn::ImportValue" : {
                            "Fn::Sub" : "${KeyStackParam}-EnvironmentKeyReaderPolicyArn"
                        }
                    }
                ],
                "AssumeRolePolicyDocument" : {
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Principal" : {
                                "Service" : "lambda.amazonaws.com"
                            },
                            "Action"    : "sts:AssumeRole"
                        }
                    ]
                }
            }
        },
        "BucketPolicy"                   : {
            "Type" : "AWS::S3::BucketPolicy",
            "DeletionPolicy" : "Delete",
            "Properties"     : {
                "PolicyDocument" : {
                    "Id" : {
                        "Fn::Join" : [
                            "-",
                            [
                                {
                                    "Ref" : "EnvironmentNameParam"
                                },
                                {
                                    "Ref" : "BucketNameParam"
                                },
                                "bucketpolicy"
                            ]
                        ]
                    },
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Sid" : "PublicReadForGetBucketObjects",
                            "Effect" : "Allow",
                            "Principal" : "*",
                            "Action"    : "s3:GetObject",
                            "Resource"  : [
                                {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "arn:aws:s3:::",
                                            {
                                                "Ref" : "S3Bucket"
                                            },
                                            "/global/image/*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "arn:aws:s3:::",
                                            {
                                                "Ref" : "S3Bucket"
                                            },
                                            "/global/audio/*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "arn:aws:s3:::",
                                            {
                                                "Ref" : "S3Bucket"
                                            },
                                            "/stories/*/audio/*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "arn:aws:s3:::",
                                            {
                                                "Ref" : "S3Bucket"
                                            },
                                            "/stories/*/image/*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "Bucket"         : {
                    "Ref" : "S3Bucket"
                }
            }
        },
        "SessionAuditQueuePostPolicy"    : {
            "Type" : "AWS::IAM::ManagedPolicy",
            "DependsOn" : "SessionAuditQueue",
            "Properties" : {
                "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "sqs:SendMessage",
                                "sqs:GetQueueAttributes",
                                "sqs:GetQueueUrl"
                            ],
                            "Resource" : {
                                "Fn::GetAtt" : [
                                    "SessionAuditQueue",
                                    "Arn"
                                ]
                            }
                        }
                    ]
                },
                "Roles"          : [
                    {
                        "Ref" : "LambdaStoryEngineMinimumRole"
                    }
                ],
                "ManagedPolicyName" : {
                    "Fn::Join" : [
                        "-",
                        [
                            {
                                "Ref" : "EnvironmentNameParam"
                            },
                            "sessionauditqueuepost",
                            "policy"
                        ]
                    ]
                }
            }
        },
        "SessionAuditQueueReaderPolicy"  : {
            "Type" : "AWS::IAM::ManagedPolicy",
            "DependsOn" : "SessionAuditQueue",
	
            "Properties" : {
			
                "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "sqs:DeleteMessage",
                                "sqs:ReceiveMessage",
                                "sqs:GetQueueAttributes"
                            ],
                            "Resource" : {
                                "Fn::GetAtt" : [
                                    "SessionAuditQueue",
                                    "Arn"
                                ]
                            }
                        }
                    ]
                },
                "Roles"          : [
                    {
                        "Ref" : "LambdaSessionAuditReceiverRole"
                    }
                ],
                "ManagedPolicyName" : {
                    "Fn::Join" : [
                        "-",
                        [
                            {
                                "Ref" : "EnvironmentNameParam"
                            },
                            "sessionauditqueuereader",
                            "policy"
                        ]
                    ]
                }
            }
        }
    },
    "Outputs"                  : {
        "BucketArn" : {
            "Description" : "ARN of the  StoryEngine Bucket",
            "Value"       : {
                "Fn::GetAtt" : [
                    "S3Bucket",
                    "Arn"
                ]
            },
            "Export"      : {
                "Name" : {
                    "Fn::Sub" : "${AWS::StackName}-StoryEngineBucketArn"
                }
            }
        },
        "BucketName" : {
            "Description" : "Name of the StoryEngine Bucket",
            "Value"       : {
                "Fn::Join" : [
                    "-",
                    [
                        {
                            "Ref" : "BucketNameParam"
                        },
                        {
                            "Ref" : "EnvironmentNameParam"
                        }
                    ]
                ]
            },
            "Export"      : {
                "Name" : {
                    "Fn::Sub" : "${AWS::StackName}-StoryEngineBucketName"
                }
            }
        },
        "AuditDeadLetterQueueName" : {
            "Description" : "Name of the StoryEngine Session Deadletter Audit Queue",
            "Value"       : {
                "Fn::GetAtt" : [
                    "SessionAuditQueueDeadLetter",
                    "QueueName"
                ]
            },
            "Export"      : {
                "Name" : {
                    "Fn::Sub" : "${AWS::StackName}-SessionAuditDeadLetterQueueName"
                }
            }
        },
        "AuditDeadLetterQueueArn"  : {
            "Description" : "Arn of the session audit Deadletter queue",
            "Value"       : {
                "Fn::GetAtt" : [
                    "SessionAuditQueueDeadLetter",
                    "Arn"
                ]
            },
            "Export"      : {
                "Name" : {
                    "Fn::Sub" : "${AWS::StackName}-SessionAuditDeadLetterArn"
                }
            }
        },
        "SessionAuditQueueUrl"     : {
            "Description" : "Url of the SessionAudit Queue",
            "Value"       : {
                "Ref" : "SessionAuditQueue"
            },
            "Export"      : {
                "Name" : {
                    "Fn::Sub" : "${AWS::StackName}-SessionAuditUrl"
                }
            }
        },
        "AuditQueueName"           : {
            "Description" : "Name of the StoryEngine Session Audit Queue",
            "Value"       : {
                "Fn::GetAtt" : [
                    "SessionAuditQueue",
                    "QueueName"
                ]
            },
            "Export"      : {
                "Name" : {
                    "Fn::Sub" : "${AWS::StackName}-SessionAuditQueueName"
                }
            }
        },
        "AuditQueueArn"            : {
            "Description" : "Arn of the session audit queue",
            "Value"       : {
                "Fn::GetAtt" : [
                    "SessionAuditQueue",
                    "Arn"
                ]
            },
            "Export"      : {
                "Name" : {
                    "Fn::Sub" : "${AWS::StackName}-SessionAuditArn"
                }
            }
        },
        "SessionAuditPostPolicy"   : {
            "Description" : "SessionAudit queue send policy",
            "Value"       : {
                "Ref" : "SessionAuditQueuePostPolicy"
            },
            "Export"      : {
                "Name" : {
                    "Fn::Sub" : "${AWS::StackName}-SessionAuditPostPolicy"
                }
            }
        },
        "SessionAuditReaderPolicy" : {
            "Description" : "SessionAudit queue reader policy",
            "Value"       : {
                "Ref" : "SessionAuditQueueReaderPolicy"
            },
            "Export"      : {
                "Name" : {
                    "Fn::Sub" : "${AWS::StackName}-SessionAuditReaderPolicy"
                }
            }
        },
        "SessionAuditReaderRole"   : {
            "Description" : "ARN of the Role to assign to the session reader queue reader lambda",
            "Value"       : {
                "Ref" : "LambdaSessionAuditReceiverRole"
            },
            "Export"      : {
                "Name" : {
                    "Fn::Sub" : "${AWS::StackName}-LambdaSessionAuditReaderRoleArn"
                }
            }
        },
        "LambdaStoryEngineMinimumRole" : {
            "Description" : "ARN of the Role to assign to the story engine core lambdas",
            "Value"       : {
                "Ref" : "LambdaStoryEngineMinimumRole"
            },
            "Export"      : {
                "Name" : {
                    "Fn::Sub" : "${AWS::StackName}-LambdaStoryEngineMinimumRoleArn"
                }
            }
        }
    }
}