{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Transform": "AWS::Serverless-2016-10-31",
    "Description": "An AWS Serverless Application.",
    "Parameters": {
        "ParentVpcStack": {
            "Description": "Name of stack used to create the VPN and/or subnets. Example: WhetstoneVpc-Dev",
            "Type": "String",
            "Default": "WhetstoneVpc-Dev",
            "AllowedPattern": "^[a-zA-Z]+[0-9a-zA-Z\\-]*$"
        },
        "KeyStack": {
            "Description": "Name of stack used to create environment key for decryption. Example: WhetstoneKey-Dev",
            "Type": "String",
            "Default": "WhetstoneKey-Dev",
            "AllowedPattern": "^[a-zA-Z]+[0-9a-zA-Z\\-]*$"
        },
        "PolicyStack": {
            "Description": "Name of stack used to create supplemental policies. Example: WhetstoneSharedPolicies-Dev",
            "Type": "String",
            "Default": "WhetstoneSharedPolicies-Dev",
            "AllowedPattern": "^[a-zA-Z]+[0-9a-zA-Z\\-]*$"
        },
		"BucketStack": {
		    "Description": "Name of stack used to create the Story Engine bucket. Example: WhetstoneBucket-Dev",
            "Type": "String",
            "Default": "WhetstoneBucket-Dev",
            "AllowedPattern": "^[a-zA-Z]+[0-9a-zA-Z\\-]*$"
		},
        "DatabaseStack": {
            "Description": "Name of stack used to create the database or provide a security group. Example: Whetstone-Aurora-Dev",
            "Type": "String",
            "Default": "Whetstone-Aurora-Dev",
            "AllowedPattern": "^[a-zA-Z]+[0-9a-zA-Z\\-]*$"
        },
        "LambdaNetSerializerDebug": {
            "Type": "String",
            "AllowedValues": [
                "true",
                "false"
            ],
            "Description": "Indicates if the lambda serialization is enabled or not.",
            "Default": "false"
        },
        "VersionDescription": {
            "Type": "String",
            "Description": "Associate the deployed version with the build",
            "Default": "Out of band"
        },
        "DurationThreshold": {
            "Type": "Number",
            "Description": "If the lambda execution duration exceeds this maximum, then an alarm is raised. Value is in milliseconds.",
            "Default": "7000"
        },
        "CodeDeployRule": {
            "AllowedValues": [
                "AllAtOnce",
                "Linear10PercentEvery1Minute",
                "Linear10PercentEvery2Minutes",
                "Linear10PercentEvery3Minutes",
                "Linear10PercentEvery10Minutes",
                "Canary10Percent5Minutes",
                "Canary10Percent10Minutes"
            ],
            "Default": "Linear10PercentEvery1Minute",
            "Description": "Determine whether or not to use a blue/green deployment when pushing out this lambda",
            "Type": "String"
        },
        "CustomActionLambdaStack": {
            "Description": "Stack that defines lambdas for custom resources",
            "Type": "String",
            "Default": "Whetstone-LambdaCustomActions-Dev"
        },
	"ReportGeneratorFuncBucket": {
	    "Description": "S3 Bucket of tthe Report Generator zip deployment",
	   "Type":"String"
	  },
	"ReportGeneratorFuncBucketKey": {
	    "Description": "S3 Bucket key of the Report Generator zip deployment",
	   "Type":"String"
	  }

    },
    "Resources": {
        "ReportGeneratorConfigUpdate": {
            "Type": "AWS::CloudFormation::CustomResource",
            "Properties": {
                "ServiceToken": {
                    "Fn::ImportValue": {
                        "Fn::Sub": "${CustomActionLambdaStack}-BootstrapConfigUpdateArn"
                    }
                },
                "KeyId": {
                    "Fn::ImportValue": {
                        "Fn::Sub": "${KeyStack}-EnvironmentKeyAlias"
                    }
                },
                "Parameter": {
                    "Fn::ImportValue": {
                        "Fn::Sub": "${PolicyStack}-BootstrapParameter"
                    }
                },
                "ConfigEntries": [
                    {
                        "ConfigType": "ReportStepFunction",
                        "Value": {
                            "Ref": "ReportingStateMachine"
                        }
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "980282b1-3f38-40ce-9bad-51f71735c67a"
                }
            }
        },
        "GenReportPolicyUpdate": {
            "Type": "AWS::CloudFormation::CustomResource",
            "Properties": {
                "ServiceToken": {
                    "Fn::ImportValue": {
                        "Fn::Sub": "${CustomActionLambdaStack}-KeyPolicyUpdateArn"
                    }
                },
                "Key": {
                    "Fn::ImportValue": {
                        "Fn::Sub": "${KeyStack}-EnvironmentKeyArn"
                    }
                },
                "RoleArn": {
                    "Fn::GetAtt": [
                        "GenReportRole",
                        "Arn"
                    ]
                },
                "GrantType": "EncryptDecrypt"
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "ff6de99c-7166-4924-b569-b4840ab9c7dc"
                }
            }
        },
        "SendReportPolicyUpdate": {
            "Type": "AWS::CloudFormation::CustomResource",
            "Properties": {
                "ServiceToken": {
                    "Fn::ImportValue": {
                        "Fn::Sub": "${CustomActionLambdaStack}-KeyPolicyUpdateArn"
                    }
                },
                "Key": {
                    "Fn::ImportValue": {
                        "Fn::Sub": "${KeyStack}-EnvironmentKeyArn"
                    }
                },
                "RoleArn": {
                    "Fn::GetAtt": [
                        "SendReportRole",
                        "Arn"
                    ]
                },
                "GrantType": "EncryptDecrypt"
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "45377fd4-e673-4eb3-9f82-2c73573c5681"
                }
            }
        },
        "GenerateReportTaskErrorAlarm": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "Error alert alarm for the generate report task in the Report Generator step function",
                "Namespace": "AWS/Lambda",
                "MetricName": "Error",
                "Dimensions": [
                    {
                        "Name": "Resource",
                        "Value": {
                            "Fn::Join": [
                                ":",
                                [
                                    {
                                        "Ref": "GenerateReportTask"
                                    },
                                    "LIVE"
                                ]
                            ]
                        }
                    },
                    {
                        "Name": "FunctionName",
                        "Value": {
                            "Ref": "GenerateReportTask"
                        }
                    }
                ],
                "ActionsEnabled": true,
                "Statistic": "Sum",
                "Period": 300,
                "EvaluationPeriods": 1,
                "Threshold": 0,
                "ComparisonOperator": "GreaterThanThreshold",
                "TreatMissingData": "ignore",
                "AlarmActions": [
                    {
                        "Fn::ImportValue": {
                            "Fn::Sub": "${KeyStack}-ErrorTopicArn"
                        }
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "9eb144dc-d822-44aa-b7c6-3481e6ec2fc9"
                }
            }
        },
        "GenerateReportTaskDurationAlarm": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "Duration alert alarm for the generate report task in the Report Generator step function",
                "Namespace": "AWS/Lambda",
                "MetricName": "Duration",
                "Dimensions": [
                    {
                        "Name": "Resource",
                        "Value": {
                            "Fn::Join": [
                                ":",
                                [
                                    {
                                        "Ref": "GenerateReportTask"
                                    },
                                    "LIVE"
                                ]
                            ]
                        }
                    },
                    {
                        "Name": "FunctionName",
                        "Value": {
                            "Ref": "GenerateReportTask"
                        }
                    }
                ],
                "ActionsEnabled": true,
                "Statistic": "Maximum",
                "Period": 300,
                "EvaluationPeriods": 1,
                "Threshold": {
                    "Ref": "DurationThreshold"
                },
                "ComparisonOperator": "GreaterThanThreshold",
                "TreatMissingData": "ignore",
                "AlarmActions": [
                    {
                        "Fn::ImportValue": {
                            "Fn::Sub": "${KeyStack}-ErrorTopicArn"
                        }
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "0928296b-824b-438a-9d01-478488a107f4"
                }
            }
        },
        "GenerateReportTaskThrottleAlarm": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "Throttle alert alarm for the generate report task in the Report Generator step function",
                "Namespace": "AWS/Lambda",
                "MetricName": "Throttle",
                "Dimensions": [
                    {
                        "Name": "Resource",
                        "Value": {
                            "Fn::Join": [
                                ":",
                                [
                                    {
                                        "Ref": "GenerateReportTask"
                                    },
                                    "LIVE"
                                ]
                            ]
                        }
                    },
                    {
                        "Name": "FunctionName",
                        "Value": {
                            "Ref": "GenerateReportTask"
                        }
                    }
                ],
                "ActionsEnabled": true,
                "Statistic": "Sum",
                "Period": 300,
                "EvaluationPeriods": 1,
                "Threshold": 0,
                "ComparisonOperator": "GreaterThanThreshold",
                "TreatMissingData": "ignore",
                "AlarmActions": [
                    {
                        "Fn::ImportValue": {
                            "Fn::Sub": "${KeyStack}-ErrorTopicArn"
                        }
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "6213d9db-3e4f-4089-81e0-1f38675f47b1"
                }
            }
        },
        "SendReportTaskErrorAlarm": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "Error alert alarm for the send report task in the Report Generator step function",
                "Namespace": "AWS/Lambda",
                "MetricName": "Error",
                "Dimensions": [
                    {
                        "Name": "Resource",
                        "Value": {
                            "Fn::Join": [
                                ":",
                                [
                                    {
                                        "Ref": "SendReportTask"
                                    },
                                    "LIVE"
                                ]
                            ]
                        }
                    },
                    {
                        "Name": "FunctionName",
                        "Value": {
                            "Ref": "SendReportTask"
                        }
                    }
                ],
                "ActionsEnabled": true,
                "Statistic": "Sum",
                "Period": 300,
                "EvaluationPeriods": 1,
                "Threshold": 0,
                "ComparisonOperator": "GreaterThanThreshold",
                "TreatMissingData": "ignore",
                "AlarmActions": [
                    {
                        "Fn::ImportValue": {
                            "Fn::Sub": "${KeyStack}-ErrorTopicArn"
                        }
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "9f3b57d0-39dd-4217-aa16-0f65effa9649"
                }
            }
        },
        "SendReportTaskDurationAlarm": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "Duration alert alarm for the send report task in the Report Generator step function",
                "Namespace": "AWS/Lambda",
                "MetricName": "Duration",
                "Dimensions": [
                    {
                        "Name": "Resource",
                        "Value": {
                            "Fn::Join": [
                                ":",
                                [
                                    {
                                        "Ref": "SendReportTask"
                                    },
                                    "LIVE"
                                ]
                            ]
                        }
                    },
                    {
                        "Name": "FunctionName",
                        "Value": {
                            "Ref": "SendReportTask"
                        }
                    }
                ],
                "ActionsEnabled": true,
                "Statistic": "Maximum",
                "Period": 300,
                "EvaluationPeriods": 1,
                "Threshold": {
                    "Ref": "DurationThreshold"
                },
                "ComparisonOperator": "GreaterThanThreshold",
                "TreatMissingData": "ignore",
                "AlarmActions": [
                    {
                        "Fn::ImportValue": {
                            "Fn::Sub": "${KeyStack}-ErrorTopicArn"
                        }
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "87985189-6df5-4c66-81e3-42eaac5f13b5"
                }
            }
        },
        "SendReportTaskThrottleAlarm": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "Throttle alert alarm for the send report task in the Report Generator step function",
                "Namespace": "AWS/Lambda",
                "MetricName": "Throttle",
                "Dimensions": [
                    {
                        "Name": "Resource",
                        "Value": {
                            "Fn::Join": [
                                ":",
                                [
                                    {
                                        "Ref": "SendReportTask"
                                    },
                                    "LIVE"
                                ]
                            ]
                        }
                    },
                    {
                        "Name": "FunctionName",
                        "Value": {
                            "Ref": "SendReportTask"
                        }
                    }
                ],
                "ActionsEnabled": true,
                "Statistic": "Sum",
                "Period": 300,
                "EvaluationPeriods": 1,
                "Threshold": 0,
                "ComparisonOperator": "GreaterThanThreshold",
                "TreatMissingData": "ignore",
                "AlarmActions": [
                    {
                        "Fn::ImportValue": {
                            "Fn::Sub": "${KeyStack}-ErrorTopicArn"
                        }
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "283ebdc7-902b-4769-a07c-7af24001332c"
                }
            }
        },
        "GenerateReportTask": {
            "Type": "AWS::Serverless::Function",
            "Properties": {
                "Role": {
                    "Fn::GetAtt": [
                        "GenReportRole",
                        "Arn"
                    ]
                },
			"Handler": "not-required",
        "Runtime": "provided",
            "CodeUri":{ "Bucket":  { "Ref": "ReportGeneratorFuncBucket" },
			"Key": { "Ref": "ReportGeneratorFuncBucketKey"  } },
                "MemorySize": 1024,
                "Timeout": 30,
                "AutoPublishAlias": "LIVE",
                "DeploymentPreference": {
                    "Enabled": true,
                    "Type": {
                        "Ref": "CodeDeployRule"
                    }
                },
                "VersionDescription": {
                    "Fn::Sub": "${VersionDescription}"
                },
                "Environment": {
                    "Variables": {
                        "DOTNET_SHARED_STORE": "/opt/dotnetcore/store/",
                        "BOOTSTRAP": {
                            "Fn::ImportValue": {
                                "Fn::Sub": "${PolicyStack}-BootstrapParameter"
                            }
                        },
                        "LAMBDA_NET_SERIALIZER_DEBUG": {
                            "Ref": "LambdaNetSerializerDebug"
                        },
                        "DBUSERTYPE": "StoryEngineUser"
                    }
                },
                "VpcConfig": {
                    "SubnetIds": [
                        {
                            "Fn::ImportValue": {
                                "Fn::Sub": "${ParentVpcStack}-SubnetAPrivate"
                            }
                        },
                        {
                            "Fn::ImportValue": {
                                "Fn::Sub": "${ParentVpcStack}-SubnetBPrivate"
                            }
                        },
                        {
                            "Fn::ImportValue": {
                                "Fn::Sub": "${ParentVpcStack}-SubnetCPrivate"
                            }
                        }
                    ],
                    "SecurityGroupIds": [
                        {
                            "Fn::ImportValue": {
                                "Fn::Sub": "${DatabaseStack}-SecurityGroup"
                            }
                        },
                        {
                            "Fn::ImportValue": {
                                "Fn::Sub": "${ParentVpcStack}-SSMSecurityGroup"
                            }
                        }
                    ]
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "f9dac3cd-8b69-46f6-af53-2bedb607d7f7"
                }
            }
        },
        "ReportGeneratorStepFunctionAlarm": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "Report Generator Step Function execution failed",
                "Namespace": "AWS/StateMachine",
                "MetricName": "ExecutionsFailed",
                "Dimensions": [
                    {
                        "Name": "FunctionName",
                        "Value": {
                            "Ref": "ReportingStateMachine"
                        }
                    }
                ],
                "ActionsEnabled": true,
                "Statistic": "Sum",
                "Period": 300,
                "EvaluationPeriods": 1,
                "Threshold": 0,
                "ComparisonOperator": "GreaterThanThreshold",
                "TreatMissingData": "ignore",
                "AlarmActions": [
                    {
                        "Fn::ImportValue": {
                            "Fn::Sub": "${KeyStack}-ErrorTopicArn"
                        }
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "cb4c4bfb-9c00-4bbe-9071-8bbd1faa0aea"
                }
            }
        },
        "SendReportTask": {
            "Type": "AWS::Serverless::Function",
            "Properties": {
                "Role": {
                    "Fn::GetAtt": [
                        "SendReportRole",
                        "Arn"
                    ]
                },
                "MemorySize": 1024,
							"Handler": "not-required",
        "Runtime": "provided",
            "CodeUri":{ "Bucket":  { "Ref": "ReportGeneratorFuncBucket" },
			"Key": { "Ref": "ReportGeneratorFuncBucketKey"  } },
                "Timeout": 30,
                "AutoPublishAlias": "LIVE",
                "DeploymentPreference": {
                    "Enabled": true,
                    "Type": {
                        "Ref": "CodeDeployRule"
                    }
                },
                "VersionDescription": {
                    "Fn::Sub": "${VersionDescription}"
                },
                "Environment": {
                    "Variables": {
                        "DOTNET_SHARED_STORE": "/opt/dotnetcore/store/",
                        "BOOTSTRAP": {
                            "Fn::ImportValue": {
                                "Fn::Sub": "${PolicyStack}-BootstrapParameter"
                            }
                        },
                        "LAMBDA_NET_SERIALIZER_DEBUG": {
                            "Ref": "LambdaNetSerializerDebug"
                        }
                      
                    }
                }
              
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "d2319f72-7fff-4508-b019-2c71c3637537"
                }
            }
        },
        "ReportingStateMachine": {
            "Type": "AWS::StepFunctions::StateMachine",
            "Properties": {
                "RoleArn": {
                    "Fn::GetAtt": [
                        "StateMachineRole",
                        "Arn"
                    ]
                },
                "DefinitionString": {
                    "Fn::Sub": "{\r\n  \"Comment\": \"Generate Report\",\r\n  \"StartAt\": \"IsScheduled\",\r\n  \"States\": {\r\n\r\n    \"IsScheduled\": {\r\n      \"Type\": \"Choice\",\r\n      \"Choices\": [\r\n        {\r\n          \"And\": [\r\n            {\r\n              \"Variable\": \"$.isScheduled\",\r\n              \"BooleanEquals\": true\r\n            }\r\n          ],\r\n          \"Next\": \"WaitUntilDelivery\"\r\n        }\r\n      ],\r\n      \"Default\": \"GenerateReport\"\r\n    },\r\n    \"WaitUntilDelivery\": {\r\n      \"Type\": \"Wait\",\r\n      \"TimestampPath\": \"$.deliveryTime\",\r\n      \"Next\": \"GenerateReport\"\r\n    },\r\n    \"GenerateReport\": {\r\n      \"Type\": \"Task\",\r\n      \"Resource\": \"${GenerateReportTask.Arn}:LIVE\",\r\n      \"Retry\": [\r\n        {\r\n          \"ErrorEquals\": [\r\n            \"AggregateException\",\r\n            \"Lambda.Unknown\",\r\n            \"Lambda.ServiceException\",\r\n            \"Lambda.SdkClientException\"\r\n          ],\r\n          \"IntervalSeconds\": 2,\r\n          \"MaxAttempts\": 6,\r\n          \"BackoffRate\": 2\r\n        }\r\n      ],\r\n      \"Next\": \"SendReport\"\r\n    },\r\n    \"IsSentOrNoMoreRetries\": {\r\n      \"Type\": \"Choice\",\r\n      \"Choices\": [\r\n        {\r\n          \"And\": [\r\n            {\r\n              \"Variable\": \"$.allSent\",\r\n              \"BooleanEquals\": false\r\n            },\r\n            {\r\n              \"Variable\": \"$.sendAttempts\",\r\n              \"NumericLessThan\": 3\r\n            }\r\n          ],\r\n          \"Next\": \"WaitTenSeconds\"\r\n        },\r\n        {\r\n          \"And\": [\r\n            {\r\n              \"Variable\": \"$.allSent\",\r\n              \"BooleanEquals\": false\r\n            },\r\n            {\r\n              \"Variable\": \"$.sendAttempts\",\r\n              \"NumericGreaterThan\": 2\r\n            }\r\n          ],\r\n          \"Next\": \"FailState\"\r\n        }\r\n      ],\r\n      \"Default\": \"NoOp\"\r\n    },\r\n    \"WaitTenSeconds\": {\r\n      \"Type\": \"Wait\",\r\n      \"Seconds\": 10,\r\n      \"Next\": \"SendReport\"\r\n    },\r\n    \"FailState\": {\r\n      \"Type\": \"Fail\",\r\n      \"Cause\": \"Report(s) could not be sent after three tries.\",\r\n      \"Error\": \"ReportsNotSent\"\r\n    },\r\n    \"SendReport\": {\r\n      \"Type\": \"Task\",\r\n      \"Resource\": \"${SendReportTask.Arn}:LIVE\",\r\n      \"Retry\": [\r\n        {\r\n          \"ErrorEquals\": [\r\n            \"AggregateException\",\r\n            \"Lambda.Unknown\",\r\n            \"Lambda.ServiceException\",\r\n            \"Lambda.SdkClientException\"\r\n          ],\r\n          \"IntervalSeconds\": 2,\r\n          \"MaxAttempts\": 6,\r\n          \"BackoffRate\": 2\r\n        }\r\n      ],\r\n      \"Next\": \"IsSentOrNoMoreRetries\"\r\n    },\r\n    \"NoOp\": {\r\n      \"Type\": \"Pass\",\r\n      \"End\": true\r\n    }\r\n  }\r\n}"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "a5cac8b6-85fc-42f2-b797-0a029b849d4e"
                }
            }
        },
        "GenReportRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "Path": {
                    "Fn::Join": [
                        "",
                        [
                            "/",
                            {
                                "Fn::ImportValue": {
                                    "Fn::Sub": "${KeyStack}-EnvironmentName"
                                }
                            },
                            "/"
                        ]
                    ]
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    {
                        "Fn::ImportValue": {
                            "Fn::Sub": "${PolicyStack}-BootstrapConfigPolicy"
                        }
                    },
                    {
                        "Fn::ImportValue": {
                            "Fn::Sub": "${PolicyStack}-EngineDbAuthPolicy"
                        }
                    },
						            {
                                "Fn::ImportValue": {
                                    "Fn::Sub": "${BucketStack}-ReportingBucketReaderPolicy"
                                }
                            },
							      {
                                "Fn::ImportValue": {
                                    "Fn::Sub": "${BucketStack}-ReportingBucketWriterPolicy"
                                }
                            },
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "54328ecd-825b-4938-8b76-269151ddfdd4"
                }
            }
        },
        "SendReportRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "Path": {
                    "Fn::Join": [
                        "",
                        [
                            "/",
                            {
                                "Fn::ImportValue": {
                                    "Fn::Sub": "${KeyStack}-EnvironmentName"
                                }
                            },
                            "/"
                        ]
                    ]
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    {
                        "Fn::ImportValue": {
                            "Fn::Sub": "${PolicyStack}-BootstrapConfigPolicy"
                        }
                    },
					  {
                                "Fn::ImportValue": {
                                    "Fn::Sub": "${BucketStack}-ReportingBucketReaderPolicy"
                                }
                            },
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                ],
                "Policies" : [
				
				 {
            "PolicyName": "SecretGrant",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                    {
                                "Action": [
                                    "secretsmanager:GetSecretValue",
									"secretsmanager:ListSecrets",
									"secretsmanager:DescribeSecret"
                                ],
                                "Resource": {
                                    "Fn::Sub": "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:*"
                                },
                                "Effect": "Allow"
                            }
						]} }				
				]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "8eaf22ff-b62d-4549-a9e3-d0b77576d81e"
                }
            }
        },
        "StateMachineRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": {
                                    "Fn::Sub": "states.${AWS::Region}.amazonaws.com"
                                }
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "StepFunctionLambdaInvoke",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "lambda:InvokeFunction"
                                    ],
                                    "Resource": [ {
            "Fn::Sub": "${GenerateReportTask.Arn}:LIVE"},
			{ "Fn::Sub": "${SendReportTask.Arn}:LIVE"} ]
                                }
                            ]
                        }
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "039a189c-f4e5-4674-a992-a9ebb23f4062"
                }
            }
        },
		"ReportGeneratorStepFunctionExecutionPolicy": {
	   "Type": "AWS::IAM::ManagedPolicy",
	   "DeletionPolicy": "Delete",
	   "Properties": {
	          "Path": {
          "Fn::Join": [
            "",
            [
              "/",
              {
                "Fn::ImportValue": {
                  "Fn::Sub": "${KeyStack}-EnvironmentName"
                }
              },
              "/"
            ]
          ]
        },
		 "PolicyDocument" : {
		    "Version": "2012-10-17",
			"Statement": {
			   "Effect": "Allow",
			   "Action": [
			      "states:StartExecution"
			   ],
			   "Resource": {
                    "Fn::Join" : [
                        ":",
                        [
						 {"Fn::Sub" : "arn:aws:states:${AWS::Region}"},
						 {"Fn::Sub" : "${AWS::AccountId}:stateMachine"},
                        {"Fn::GetAtt" : [ "ReportingStateMachine", "Name"]}
                        ]
                    ]
                }
			}		 
		 }
	   }
	}


    },
    "Outputs": {
	
	"ExecutionPolicy": {
	  "Description" : "Used to grant lambda functions execute rights to the step function",
	  "Value": { "Ref": "ReportGeneratorStepFunctionExecutionPolicy" }  ,
	  "Export":
	  {
	  "Name": {"Fn::Sub" : "${AWS::StackName}-ReportGeneratorStepFunctionPolicyArn"} 

	  }
	}
	
	},
    "Metadata": {
        "AWS::CloudFormation::Designer": {
            "039a189c-f4e5-4674-a992-a9ebb23f4062": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 660,
                    "y": 540
                },
                "z": 1,
                "embeds": []
            },
            "54328ecd-825b-4938-8b76-269151ddfdd4": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": -90,
                    "y": 350
                },
                "z": 1,
                "embeds": []
            },
            "8eaf22ff-b62d-4549-a9e3-d0b77576d81e": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": -380,
                    "y": 280
                },
                "z": 1,
                "embeds": []
            },
            "a5cac8b6-85fc-42f2-b797-0a029b849d4e": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 910,
                    "y": 380
                },
                "z": 1,
                "embeds": []
            },
            "d2319f72-7fff-4508-b019-2c71c3637537": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 180,
                    "y": 90
                },
                "z": 1,
                "embeds": []
            },
            "cb4c4bfb-9c00-4bbe-9071-8bbd1faa0aea": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 810,
                    "y": 230
                },
                "z": 1,
                "embeds": []
            },
            "f9dac3cd-8b69-46f6-af53-2bedb607d7f7": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 120,
                    "y": 410
                },
                "z": 1,
                "embeds": []
            },
            "283ebdc7-902b-4769-a07c-7af24001332c": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 300,
                    "y": 90
                },
                "z": 1,
                "embeds": []
            },
            "87985189-6df5-4c66-81e3-42eaac5f13b5": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 300,
                    "y": 200
                },
                "z": 1,
                "embeds": []
            },
            "9f3b57d0-39dd-4217-aa16-0f65effa9649": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": -100,
                    "y": 80
                },
                "z": 1,
                "embeds": []
            },
            "6213d9db-3e4f-4089-81e0-1f38675f47b1": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 110,
                    "y": 210
                },
                "z": 1,
                "embeds": []
            },
            "0928296b-824b-438a-9d01-478488a107f4": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": -180,
                    "y": 470
                },
                "z": 1,
                "embeds": []
            },
            "9eb144dc-d822-44aa-b7c6-3481e6ec2fc9": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 400,
                    "y": 470
                },
                "z": 1,
                "embeds": []
            },
            "45377fd4-e673-4eb3-9f82-2c73573c5681": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": -500,
                    "y": 410
                },
                "z": 1,
                "embeds": []
            },
            "ff6de99c-7166-4924-b569-b4840ab9c7dc": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": -310,
                    "y": 340
                },
                "z": 1,
                "embeds": []
            },
            "980282b1-3f38-40ce-9bad-51f71735c67a": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 240,
                    "y": 330
                },
                "z": 1,
                "embeds": []
            }
        }
    }
}