{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Transform": "AWS::Serverless-2016-10-31",
  "Description": "An AWS Serverless Application that supports logs session audit messages from a queue to the database.",
  "Parameters": {
    "ParentVpcStack": {
      "Description": "Name of stack used to create the VPN and/or subnets. Example: WhetstoneVpc-Dev",
      "Type": "String",
      "Default": "WhetstoneVpc-Dev",
      "AllowedPattern": "^[a-zA-Z]+[0-9a-zA-Z\\-]*$"
    },
    "KeyStack": {
      "Description": "Name of stack used to create environment key for decryption. Example: WhetstoneKey-Dev",
      "Type": "String",
      "Default": "WhetstoneKey-Dev",
      "AllowedPattern": "^[a-zA-Z]+[0-9a-zA-Z\\-]*$"
    },
    "PolicyStack": {
      "Description": "Name of stack used to create supplemental policies. Example: WhetstoneSharedPolicies-Dev",
      "Type": "String",
      "Default": "WhetstoneSharedPolicies-Dev",
      "AllowedPattern": "^[a-zA-Z]+[0-9a-zA-Z\\-]*$"
    },
    "QueueStack": {
      "Description": "Name of stack used to create the audit queue. Example: WhetstoneQueue-Dev",
      "Type": "String",
      "Default": "WhetstoneQueue-Dev",
      "AllowedPattern": "^[a-zA-Z]+[0-9a-zA-Z\\-]*$"
    },
        "DatabaseStack": 
       {
            "Description": "Name of stack used to create the database or provide a security group. Example: Whetstone-Aurora-Dev",
            "Type": "String",
            "Default": "Whetstone-Aurora-Dev",
            "AllowedPattern": "^[a-zA-Z]+[0-9a-zA-Z\\-]*$"
       },
    "LambdaNetSerializerDebug": {
      "Type": "String",
      "AllowedValues": [
        "true",
        "false"
      ],
      "Description": "Indicates if the lambda serialization is enabled or not.",
      "Default": "false"
    },
	  "SessionQueueUserName" : {
	    "Type": "String",
		"Description": "Database user with rights required to insert into session audit tables",
		"Default": "lambda_sessionaudit"
	  },
	  "VersionDescription":{
	    "Type": "String",
		"Description": "Associate the deployed version with the build",
		"Default": "Out of band"
	  },
	  "DurationThreshold": {
	   "Type": "Number",
		"Description": "If the lambda execution duration exceeds this maximum, then an alarm is raised. Value is in milliseconds.",
		"Default": "7000"

	  },
	  "CodeDeployRule": {
    "AllowedValues": [
        "AllAtOnce",
        "Linear10PercentEvery1Minute",
		"Linear10PercentEvery2Minutes",
		"Linear10PercentEvery3Minutes",
		"Linear10PercentEvery10Minutes",
		"Canary10Percent5Minutes",
		"Canary10Percent10Minutes"
    ],
    "Default": "Linear10PercentEvery1Minute",
    "Description": "Determine whether or not to use a blue/green deployment when pushing out this lambda",
    "Type": "String"
},
  "CustomActionLambdaStack": {
   "Description": "Stack that defines lambdas for custom resources",
 "Type": "String",
 "Default" : "Whetstone-LambdaCustomActions-Dev"

  },
  	"SessionQueueFuncBucket": {
	    "Description": "S3 Bucket of the Session Queue Function zip deployment",
	   "Type":"String"
	  },
	"SessionQueueFuncBucketKey": {
	    "Description": "S3 Bucket key of the Session Queue Function zip deployment",
	   "Type":"String"
	  }
  },

  "Resources": {
       "KeyPolicyUpdate": {
      "Type": "AWS::CloudFormation::CustomResource",
	  "Properties" : {
	      "ServiceToken":    {
                "Fn::ImportValue": {
                  "Fn::Sub": "${CustomActionLambdaStack}-KeyPolicyUpdateArn"
                }
              },
		   "Key":  {
                     "Fn::ImportValue":{
                        "Fn::Sub":"${KeyStack}-EnvironmentKeyArn"
                     }
                  },
			"RoleArn": {"Fn::GetAtt" : [ "SessionAuditLoggerRole", "Arn"]},
			"GrantType": "Decrypt"
	  }
  },
     "SessionAuditErrorAlarm": {
	       "Type":"AWS::CloudWatch::Alarm",
		   "Properties": {
		    "AlarmDescription" : "Error alert alarm for the session audit queue",
			"Namespace": "AWS/Lambda",
			"MetricName" : "Error",
			"Dimensions": [
						{
			   "Name": "Resource",
			   "Value": { "Fn::Join" :[ ":", [  {  "Ref": "SessionLoggerFunction"}, "LIVE" ]  ] }
			},{
			   "Name": "FunctionName",
			   "Value": { "Ref" : "SessionLoggerFunction"}
			}
			
			],
			"ActionsEnabled": true,
			"Statistic": "Sum",
			"Period": 300,
			"EvaluationPeriods": 1,
			"Threshold": 0,
			"ComparisonOperator": "GreaterThanThreshold",
			"TreatMissingData": "ignore",
			"AlarmActions": [
			 {
                     "Fn::ImportValue":{
                        "Fn::Sub":"${KeyStack}-ErrorTopicArn"
                     }
                  }
			]
			  

		   }

	   },
	    "SessionAuditDurationAlarm": {
	       "Type":"AWS::CloudWatch::Alarm",
		   "Properties": {
		    "AlarmDescription" : "Duration alert alarm for the session audit queue",
			"Namespace": "AWS/Lambda",
			"MetricName" : "Duration",
			"Dimensions": [						{
			   "Name": "Resource",
			   "Value": { "Fn::Join" :[ ":", [  {  "Ref": "SessionLoggerFunction"}, "LIVE" ]  ] }
			},{
			   "Name": "FunctionName",
			   "Value": { "Ref" : "SessionLoggerFunction"}
			}],
			"ActionsEnabled": true,
			"Statistic": "Maximum",
			"Period": 300,
			"EvaluationPeriods": 1,
			"Threshold": { "Ref" : "DurationThreshold"},
			"ComparisonOperator": "GreaterThanThreshold",
			"TreatMissingData": "ignore",
			"AlarmActions": [
			 {
                     "Fn::ImportValue":{
                        "Fn::Sub":"${KeyStack}-ErrorTopicArn"
                     }
                  }
			]
			  

		   }

	   },
	   	"SessionAuditThrottleAlarm": {
	       "Type":"AWS::CloudWatch::Alarm",
		   "Properties": {
		    "AlarmDescription" : "Throttle alert alarm for the session audit queue",
			"Namespace": "AWS/Lambda",
			"MetricName" : "Throttle",
			"Dimensions": [
						{
			   "Name": "Resource",
			   "Value": { "Fn::Join" :[ ":", [  {  "Ref": "SessionLoggerFunction"}, "LIVE" ]  ] }
			},{
			   "Name": "FunctionName",
			   "Value": { "Ref" : "SessionLoggerFunction"}
			}
],
			"ActionsEnabled": true,
			"Statistic": "Sum",
			"Period": 300,
			"EvaluationPeriods": 1,
			"Threshold": 0,
			"ComparisonOperator": "GreaterThanThreshold",
			"TreatMissingData": "ignore",
			"AlarmActions": [
			 {
                     "Fn::ImportValue":{
                        "Fn::Sub":"${KeyStack}-ErrorTopicArn"
                     }
                  }
			]
			  

		   }

	   },
    "SessionAuditLoggerRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": {
          "Fn::Join": [
            "",
            [
              "/",
              {
                "Fn::ImportValue": {
                  "Fn::Sub": "${KeyStack}-EnvironmentName"
                }
              },
              "/"
            ]
          ]
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "DbRole",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "rds-db:connect",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::Sub": "arn:aws:rds-db:${AWS::Region}:${AWS::AccountId}:dbuser:"
                        },
                        {
                          "Fn::ImportValue": {
                            "Fn::Sub": "${PolicyStack}-DatabaseId"
                          }
                        },
                        {
                          "Fn::Sub": "/${SessionQueueUserName}"
                        }
                      ]
                    ]
                  }
                }
              ]
            }
          }
        ],
        "ManagedPolicyArns": [
          {
            "Fn::ImportValue": {
              "Fn::Sub": "${PolicyStack}-BootstrapConfigPolicy"
            }
          },
          {
            "Fn::ImportValue": {
              "Fn::Sub": "${QueueStack}-SessionAuditReaderPolicy"
            }
          },
          "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
        ]
      }
    },
    "SessionLoggerFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
                "FunctionName": {
                    "Fn::Join": [
                        "",
                        [
                            "WhetstoneSessionAuditLogger",
                            {
                                "Fn::ImportValue": {
                                    "Fn::Sub": "${KeyStack}-EnvironmentName"
                                }
                            }
                        ]
                    ]
                },
		"AutoPublishAlias": "LIVE",
		"DeploymentPreference": {	
		  "Enabled": true,
		  "Type":  { "Ref": "CodeDeployRule"}
		},		
		"VersionDescription": { "Fn::Sub": "${VersionDescription}" },
            "CodeUri":{ "Bucket":  { "Ref": "SessionQueueFuncBucket" },
			"Key": { "Ref": "SessionQueueFuncBucketKey"  } },
        "Description": "Log session audit requests in the session audit queue in the database",
        "Environment": {
          "Variables": {
            "DOTNET_SHARED_STORE": "/opt/dotnetcore/store/",
            "BOOTSTRAP": {
              "Fn::ImportValue": {
                "Fn::Sub": "${PolicyStack}-BootstrapParameter"
              }
            },
            "LAMBDA_NET_SERIALIZER_DEBUG": {
              "Ref": "LambdaNetSerializerDebug"
            },
            "DBUSERTYPE": "SessionLoggingUser"
          }
        },
        "Events": {
          "SqsReadResource": {
            "Type": "SQS",
            "Properties": {
              "Queue": {
                "Fn::ImportValue": {
                  "Fn::Sub": "${QueueStack}-SessionAuditArn"
                }
              },
              "BatchSize": 10
            }
          }
        },
          "Handler": "not-required",
        "Runtime": "provided",
 "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "SessionAuditLoggerRole",
            "Arn"
          ]
        },
        "Timeout": 20,
        "VpcConfig": {
          "SubnetIds": [
            {
              "Fn::ImportValue": {
                "Fn::Sub": "${ParentVpcStack}-SubnetAPrivate"
              }
            },
            {
              "Fn::ImportValue": {
                "Fn::Sub": "${ParentVpcStack}-SubnetBPrivate"
              }
            },
            {
              "Fn::ImportValue": {
                "Fn::Sub": "${ParentVpcStack}-SubnetCPrivate"
              }
            }
          ],
          "SecurityGroupIds": [
            {
              "Fn::ImportValue": {
                "Fn::Sub": "${DatabaseStack}-SecurityGroup"
              }
            },
            {
              "Fn::ImportValue": {
                "Fn::Sub": "${ParentVpcStack}-SSMSecurityGroup"
              }
            }
          ]
        }
	
      }
    }
  },
  "Outputs": {
    "SessionAuditRoleArn": {
      "Description": "ARN of the role used by this API",
      "Value": {
        "Fn::GetAtt": [
          "SessionAuditLoggerRole",
          "Arn"
        ]
      }
    }
  }
}