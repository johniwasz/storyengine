{
   "AWSTemplateFormatVersion":"2010-09-09",
   "Transform":"AWS::Serverless-2016-10-31",
   "Description":"An AWS Serverless Application that supports Bixby requests only.",
  "Parameters": {
    "ApiSecretsStack": {
      "Description": "Name of stack used to create API Secret settings for Twilio. Example: Whetstone-APISecrets-Dev",
      "Type": "String",
      "Default": "Whetstone-APISecrets-Dev",
      "AllowedPattern": "^[a-zA-Z]+[0-9a-zA-Z\\-]*$"

    },
    "KeyStack": {
      "Description": "Name of stack used to create environment key for decryption. Example: WhetstoneKey-Dev",
      "Type": "String",
      "Default": "WhetstoneKey-Dev",
      "AllowedPattern": "^[a-zA-Z]+[0-9a-zA-Z\\-]*$"
    },
    "CacheStack": {
      "Description": "Name of stack used to create the dynamo db cache table: Whetstone-CacheTable-Dev",
      "Type": "String",
      "Default": "Whetstone-CacheTable-Dev",
      "AllowedPattern": "^[a-zA-Z]+[0-9a-zA-Z\\-]*$"
    },
    "DynamoTableStack": {
      "Description": "Name of stack used to create dynamodb table stores. Example: Whetstone-DynamoDbStore-Dev",
      "Type": "String",
      "Default": "Whetstone-DynamoDbStore-Dev",
      "AllowedPattern": "^[a-zA-Z]+[0-9a-zA-Z\\-]*$"
    },
    "DynamoDBMaxRetries": {
      "Type": "Number",
      "Description": "Number of times DynamoDB will retry the operation before abandoning.",
      "Default": "3"
    },
    "DynamoDBTimeout": {
      "Type": "Number",
      "Description": "How many milliseconds the DynamoDB request will wait before timing out.",
      "Default": "2000"
    },
    "BucketStack": {
      "Description": "Name of stack used to create the Story Engine bucket. Example: WhetstoneBucket-Dev",
      "Type": "String",
      "Default": "WhetstoneBucket-Dev",
      "AllowedPattern": "^[a-zA-Z]+[0-9a-zA-Z\\-]*$"
    },
    "QueueStack": {
      "Description": "Name of stack used to create the audit queue. Example: WhetstoneQueue-Dev",
      "Type": "String",
      "Default": "WhetstoneQueue-Dev",
      "AllowedPattern": "^[a-zA-Z]+[0-9a-zA-Z\\-]*$"
    },
    "MessageSenderStepFunctionStack": {
      "Description": "Name of stack used to create the audit queue. Example: Whetstone-MessageSender-Dev",
      "Type": "String",
      "Default": "Whetstone-MessageSender-Dev",
      "AllowedPattern": "^[a-zA-Z]+[0-9a-zA-Z\\-]*$"
    },
    "DurationThreshold": {
      "Type": "Number",
      "Description": "If the lambda execution duration exceeds this maximum, then an alarm is raised. Value is in milliseconds.",
      "Default": "3000"
    },
    "LambdaNetSerializerDebug": {
      "Type": "String",
      "AllowedValues": [
        "true",
        "false"
      ],
      "Description": "Indicates if the lambda serialization is enabled or not.",
      "Default": "false"
    },
    "VersionDescription": {
      "Type": "String",
      "Description": "Associate the deployed version with the build",
      "Default": "Out of band"
    },
    "CodeDeployRule": {
      "AllowedValues": [
        "AllAtOnce",
        "Linear10PercentEvery1Minute",
        "Linear10PercentEvery2Minutes",
        "Linear10PercentEvery3Minutes",
        "Linear10PercentEvery10Minutes",
        "Canary10Percent5Minutes",
        "Canary10Percent10Minutes"
      ],
      "Default": "Linear10PercentEvery1Minute",
      "Description": "Determine whether or not to use a blue/green deployment when pushing out this lambda",
      "Type": "String"
    },
    "CustomActionLambdaStack": {
      "Description": "Stack that defines lambdas for custom resources",
      "Type": "String",
      "Default": "Whetstone-LambdaCustomActions-Dev"
    },
    "SlidingExpirationTime": {
      "Type": "Number",
      "Description": "Cache sliding expiration time. Value is in milliseconds.",
      "Default": "9000"
    },
    "BixbyFuncBucket": {
      "Description": "S3 Bucket of the Bixby Function zip deployment",
      "Type": "String"
    },
    "BixbyFuncBucketKey": {
      "Description": "S3 Bucket key of the Bixby Function zip deployment",
      "Type": "String"
    }
  },
   "Resources":{
      "KeyPolicyUpdate":{
         "Type":"AWS::CloudFormation::CustomResource",
         "Properties":{
            "ServiceToken":{
               "Fn::ImportValue":{
                  "Fn::Sub":"${CustomActionLambdaStack}-KeyPolicyUpdateArn"
               }
            },
            "Key":{
               "Fn::ImportValue":{
                  "Fn::Sub":"${KeyStack}-EnvironmentKeyArn"
               }
            },
            "RoleArn":{
               "Fn::GetAtt":[
                  "BixbyApiRole",
                  "Arn"
               ]
            },
            "GrantType":"EncryptDecrypt"
         }
      },
      "BixbyApiRole":{
         "Type":"AWS::IAM::Role",
         "Properties":{
            "Path":{
               "Fn::Join":[
                  "",
                  [
                     "/",
                     {
                        "Fn::ImportValue":{
                           "Fn::Sub":"${KeyStack}-EnvironmentName"
                        }
                     },
                     "/"
                  ]
               ]
            },
            "AssumeRolePolicyDocument":{
               "Version":"2012-10-17",
               "Statement":[
                  {
                     "Action":"sts:AssumeRole",
                     "Effect":"Allow",
                     "Principal":{
                        "Service":"lambda.amazonaws.com"
                     }
                  }
               ]
            },
            "ManagedPolicyArns":[
               {
                  "Fn::ImportValue":{
                     "Fn::Sub":"${BucketStack}-BucketReaderPolicy"
                  }
               },
               {
                  "Fn::ImportValue":{
                     "Fn::Sub":"${QueueStack}-SessionAuditPostPolicy"
                  }
               },
               {
                  "Fn::ImportValue":{
                     "Fn::Sub":"${CacheStack}-CacheTableAccessPolicyArn"
                  }
               },
               {
                  "Fn::ImportValue":{
                     "Fn::Sub":"${MessageSenderStepFunctionStack}-MessageDispatcherStepFunctionPolicyArn"
                  }
               },
               {
                  "Fn::ImportValue":{
                     "Fn::Sub":"${DynamoTableStack}-UserTableAccessPolicyArn"
                  }
               },
			   		{
            "Fn::ImportValue": {
              "Fn::Sub": "${ApiSecretsStack}-TwilioLiveReaderPolicy"
            }
          },
               "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
               "arn:aws:iam::aws:policy/AWSLambdaExecute",
               "arn:aws:iam::aws:policy/service-role/AWSLambdaRole",
               "arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess"
            ],
            "Policies":[
               {
                  "PolicyName":"DeadLetterWriterPolicy",
                  "PolicyDocument":{
                     "Version":"2012-10-17",
                     "Statement":[
                        {
                           "Effect":"Allow",
                           "Action":[
                              "sqs:SendMessage",
                              "sqs:GetQueueAttributes",
                              "sqs:GetQueueUrl"
                           ],
                           "Resource":{
                              "Fn::GetAtt":[
                                 "BixbyRequestDeadLetter",
                                 "Arn"
                              ]
                           }
                        }
                     ]
                  }
               }
            ]
         }
      },
      "AspNetCoreFunction":{
         "Type":"AWS::Serverless::Function",
         "Properties":{
            "FunctionName":{
               "Fn::Join":[
                  "",
                  [
                     "BixbyApi",
                     {
                        "Fn::ImportValue":{
                           "Fn::Sub":"${KeyStack}-EnvironmentName"
                        }
                     }
                  ]
               ]
            },
            "CodeUri":{ "Bucket":  { "Ref": "BixbyFuncBucket" },
			"Key": { "Ref": "BixbyFuncBucketKey"  } },
            "AutoPublishAlias":"LIVE",
            "DeploymentPreference":{
               "Enabled":true,
               "Type":{
                  "Ref":"CodeDeployRule"
               }
            },
            "VersionDescription":{
               "Fn::Sub":"${VersionDescription}"
            },
            "Description":"Handle Bixby requests for Bixby Capsules",
  "Environment": {
    "Variables": {
      "DOTNET_SHARED_STORE": "/opt/dotnetcore/store/",
      "LAMBDA_NET_SERIALIZER_DEBUG": {
        "Ref": "LambdaNetSerializerDebug"
      },
      "BUCKET": {
        "Fn::ImportValue": {
          "Fn::Sub": "${BucketStack}-StoryEngineBucketName"
        }
      },
      "CACHESLIDINGSECONDS": {
        "Ref": "SlidingExpirationTime"

      },
      "CACHETABLE": {
        "Fn::ImportValue": {
          "Fn::Sub": "${CacheStack}-CacheTableName"
        }
      },
      "USERTABLE": {
        "Fn::ImportValue": {
          "Fn::Sub": "${DynamoTableStack}-UserTableName"
        }
      },
      "LOGLEVEL": "Debug",
      "MESSAGESTEPFUNCTION": {
        "Fn::ImportValue": {
          "Fn::Sub": "${MessageSenderStepFunctionStack}-MessageSenderStepFunctionArn"
        }
      },
      "SESSIONQUEUEURL": {
        "Fn::ImportValue": {
          "Fn::Sub": "${QueueStack}-SessionAuditUrl"
        }
      },
      "DYNAMODBMAXERRORRETRIES": {
        "Ref": "DynamoDBMaxRetries"
      },
      "DYNAMODBTIMEOUT": {
        "Ref": "DynamoDBTimeout"
      },
      "TWILIOLIVESECRETKEY": {
        "Fn::ImportValue": {
          "Fn::Sub": "${ApiSecretsStack}-TwilioLiveSecretName"
        }
      },
      "TWILIOTESTSECRETKEY": {
        "Fn::ImportValue": {
          "Fn::Sub": "${ApiSecretsStack}-TwilioTestSecretName"
        }
      }
    }
        },
         "Handler": "not-required",
        "Runtime": "provided",
            "MemorySize":1024,
            "Role":{
               "Fn::GetAtt":[
                  "BixbyApiRole",
                  "Arn"
               ]
            },
            "Timeout":30
         }
      },
      "ServerlessRestApi":{
         "Type":"AWS::ApiGateway::RestApi",
         "Properties":{
            "Description":"Bixby API Stack",
            "Name":{
               "Fn::Join":[
                  "",
                  [
                     "Whetstone-BixbyApi-",
                     {
                        "Fn::ImportValue":{
                           "Fn::Sub":"${KeyStack}-EnvironmentName"
                        }
                     }
                  ]
               ]
            },
            "ApiKeySourceType":"HEADER",
            "EndpointConfiguration":{
               "Types":[
                  "REGIONAL"
               ]
            }
         }
      },
      "BixbyPostMethod":{
         "Type":"AWS::ApiGateway::Method",
         "DependsOn":[
            "AspNetCoreFunction",
            "ServerlessRestApi"
         ],
         "Properties":{
            "AuthorizationType":"NONE",
            "OperationName":"Post Bixby Request",
            "ApiKeyRequired":true,
            "ResourceId":{
               "Fn::GetAtt":[
                  "ServerlessRestApi",
                  "RootResourceId"
               ]
            },
            "RestApiId":{
               "Ref":"ServerlessRestApi"
            },
            "HttpMethod":"POST",
            "Integration":{
               "ConnectionType":"INTERNET",
               "IntegrationHttpMethod":"POST",
               "Type":"AWS_PROXY",
               "Uri":{
                  "Fn::Sub":"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AspNetCoreFunction.Arn}:LIVE/invocations"
               }
            }
         }
      },
      "AspNetCoreFunctionPostResourcePermissionStage":{
         "Type":"AWS::Lambda::Permission",
		 "DependsOn": [
			"AspNetCoreFunction",
			"AspNetCoreFunctionAliasLIVE"
			],
         "Properties":{
            "Action":"lambda:invokeFunction",
            "Principal":"apigateway.amazonaws.com",
            "FunctionName":{
               "Fn::Sub":"${AspNetCoreFunction.Arn}:LIVE"
            },
            "SourceArn":{
               "Fn::Sub":"arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ServerlessRestApi}/*/POST/"
            }
         }
      },
      "BixbyApiKey":{
         "Type":"AWS::ApiGateway::ApiKey",
         "Properties":{
            "Description":{
               "Fn::Join":[
                  "",
                  [
                     "For use with the Bixby API ",
                     {
                        "Fn::ImportValue":{
                           "Fn::Sub":"${KeyStack}-EnvironmentName"
                        }
                     },
                     " API"
                  ]
               ]
            },
            "Enabled":true,
            "Name":{
               "Fn::Join":[
                  "",
                  [
                     "Bixby ",
                     {
                        "Fn::ImportValue":{
                           "Fn::Sub":"${KeyStack}-EnvironmentName"
                        }
                     },
                     " API Key"
                  ]
               ]
            }
         }
      },
      "BixbyApiUsage":{
         "Type":"AWS::ApiGateway::UsagePlan",
         "DependsOn":[
            "AspNetCoreFunction",
            "ServerlessRestApiDeploymentProd",
            "ServerlessRestApiDeploymentStage"
         ],
         "Properties":{
            "UsagePlanName":{
               "Fn::Join":[
                  "",
                  [
                     "Bixby ",
                     {
                        "Fn::ImportValue":{
                           "Fn::Sub":"${KeyStack}-EnvironmentName"
                        }
                     },
                     " Usage Plan"
                  ]
               ]
            },
            "Description":{
               "Fn::Join":[
                  "",
                  [
                     "For use with the Bixby ",
                     {
                        "Fn::ImportValue":{
                           "Fn::Sub":"${KeyStack}-EnvironmentName"
                        }
                     },
                     " API"
                  ]
               ]
            },
            "ApiStages":[
               {
                  "ApiId":{
                     "Fn::Sub":"${ServerlessRestApi}"
                  },
                  "Stage":"prod"
               },
               {
                  "ApiId":{
                     "Fn::Sub":"${ServerlessRestApi}"
                  },
                  "Stage":"stage"
               }
            ]
         }
      },
      "UsagePlanKey":{
         "Type":"AWS::ApiGateway::UsagePlanKey",
         "DependsOn":[
            "BixbyApiKey",
            "BixbyApiUsage"
         ],
         "Properties":{
            "KeyType":"API_KEY",
            "KeyId":{
               "Ref":"BixbyApiKey"
            },
            "UsagePlanId":{
               "Ref":"BixbyApiUsage"
            }
         }
      },
      "ServerlessRestApiDeploymentProd":{
         "Type":"AWS::ApiGateway::Deployment",
         "DependsOn":[
            "BixbyPostMethod"
         ],
         "Properties":{
            "RestApiId":{
               "Ref":"ServerlessRestApi"
            },
            "Description":"RestApi production deployment",
            "StageName":"prod"
         }
      },
      "ServerlessRestApiDeploymentStage":{
         "Type":"AWS::ApiGateway::Deployment",
         "DependsOn":[
            "BixbyPostMethod"
         ],
         "Properties":{
            "RestApiId":{
               "Ref":"ServerlessRestApi"
            },
            "Description":"RestApi stage deployment",
            "StageName":"stage"
         }
      },
      "BixbyRequestDeadLetter":{
         "Type":"AWS::SQS::Queue",
         "Properties":{
            "ReceiveMessageWaitTimeSeconds":20,
            "VisibilityTimeout":30,
            "MessageRetentionPeriod":1209600,
            "KmsMasterKeyId":{
               "Fn::ImportValue":{
                  "Fn::Sub":"${KeyStack}-EnvironmentKeyAlias"
               }
            },
            "KmsDataKeyReusePeriodSeconds":86400,
            "Tags":[
               {
                  "Key":"Environment",
                  "Value":{
                     "Fn::ImportValue":{
                        "Fn::Sub":"${KeyStack}-EnvironmentName"
                     }
                  }
               },
               {
                  "Key":"Purpose",
                  "Value":{
                     "Fn::ImportValue":{
                        "Fn::Sub":"${KeyStack}-Purpose"
                     }
                  }
               },
               {
                  "Key":"Stack",
                  "Value":{
                     "Ref":"AWS::StackName"
                  }
               },
               {
                  "Key":"Name",
                  "Value":{
                     "Fn::Join":[
                        "-",
                        [
                           {
                              "Fn::ImportValue":{
                                 "Fn::Sub":"${KeyStack}-EnvironmentName"
                              }
                           },
                           "key",
                           {
                              "Ref":"AWS::StackName"
                           }
                        ]
                     ]
                  }
               }
            ]
         },
         "DeletionPolicy":"Delete"
      },
      "BixbyErrorMetricFilter":{
	   "DependsOn" : ["AspNetCoreFunctionAliasLIVE", "FunctionLogGroup"],
         "Type":"AWS::Logs::MetricFilter",
         "Properties":{
            "LogGroupName":{
               "Fn::Sub":"/aws/lambda/${AspNetCoreFunction}"
            },
            "FilterPattern":"?Error ?Exception ?ERROR ?error",
            "MetricTransformations":[
               {
                  "MetricValue":"1",
                  "MetricNamespace":"Whetstone/BixbyErrors",
                  "MetricName":"Error"
               }
            ]
         }
      },

	    "FunctionLogGroup":
		{
    "Type": "AWS::Logs::LogGroup",
    "DependsOn": [ "AspNetCoreFunction" ],
    "Properties":
	{
      "LogGroupName": {
               "Fn::Sub":"/aws/lambda/${AspNetCoreFunction}"
            },
      "RetentionInDays": 7
	  }
},

      "BixbyFunctionUnexpectedErrorErrorAlarm":{
         "Type":"AWS::CloudWatch::Alarm",
         "Properties":{
            "AlarmDescription":"Unexpected alert alarm for the Bixby Function",
            "Namespace":"AWS/Lambda",
            "MetricName":"Error",
            "Dimensions":[
               {
                  "Name":"Resource",
                  "Value":{
                     "Fn::Join":[
                        ":",
                        [
                           {
                              "Ref":"AspNetCoreFunction"
                           },
                           "LIVE"
                        ]
                     ]
                  }
               },
               {
                  "Name":"FunctionName",
                  "Value":{
                     "Ref":"AspNetCoreFunction"
                  }
               }
            ],
            "ActionsEnabled":true,
            "Statistic":"Sum",
            "Period":300,
            "EvaluationPeriods":1,
            "Threshold":0,
            "ComparisonOperator":"GreaterThanThreshold",
            "TreatMissingData":"notBreaching",
            "AlarmActions":[
               {
                  "Fn::ImportValue":{
                     "Fn::Sub":"${KeyStack}-ErrorTopicArn"
                  }
               }
            ]
         }
      },
      "BixbyFunctionErrorLogAlarm":{
         "Type":"AWS::CloudWatch::Alarm",
         "DependsOn":[
            "BixbyErrorMetricFilter"
         ],
         "Properties":{
            "AlarmDescription":"Error log alert alarm for the Bixby Function",
            "Namespace":"Whetstone/BixbyErrors",
            "MetricName":"Error",
            "ActionsEnabled":true,
            "Statistic":"Sum",
            "Period":300,
            "EvaluationPeriods":1,
            "Threshold":0,
            "ComparisonOperator":"GreaterThanThreshold",
            "TreatMissingData":"notBreaching",
            "AlarmActions":[
               {
                  "Fn::ImportValue":{
                     "Fn::Sub":"${KeyStack}-ErrorTopicArn"
                  }
               }
            ]
         }
      },
      "BixbyFunctionThrottleAlarm":{
         "Type":"AWS::CloudWatch::Alarm",
         "Properties":{
            "AlarmDescription":"Throttle alert alarm for the Bixby Function",
            "Namespace":"AWS/Lambda",
            "MetricName":"Throttle",
            "Dimensions":[
               {
                  "Name":"Resource",
                  "Value":{
                     "Fn::Join":[
                        ":",
                        [
                           {
                              "Ref":"AspNetCoreFunction"
                           },
                           "LIVE"
                        ]
                     ]
                  }
               },
               {
                  "Name":"FunctionName",
                  "Value":{
                     "Ref":"AspNetCoreFunction"
                  }
               }
            ],
            "ActionsEnabled":true,
            "Statistic":"Sum",
            "Period":300,
            "EvaluationPeriods":1,
            "Threshold":0,
            "ComparisonOperator":"GreaterThanThreshold",
            "TreatMissingData":"ignore",
            "AlarmActions":[
               {
                  "Fn::ImportValue":{
                     "Fn::Sub":"${KeyStack}-ErrorTopicArn"
                  }
               }
            ]
         }
      },
      "BixbyFunctionDurationAlarm":{
         "Type":"AWS::CloudWatch::Alarm",
         "Properties":{
            "AlarmDescription":"Duration alert alarm for the Bixby Function",
            "Namespace":"AWS/Lambda",
            "MetricName":"Duration",
            "Dimensions":[
               {
                  "Name":"Resource",
                  "Value":{
                     "Fn::Join":[
                        ":",
                        [
                           {
                              "Ref":"AspNetCoreFunction"
                           },
                           "LIVE"
                        ]
                     ]
                  }
               },
               {
                  "Name":"FunctionName",
                  "Value":{
                     "Ref":"AspNetCoreFunction"
                  }
               }
            ],
            "ActionsEnabled":true,
            "Statistic":"Maximum",
            "Period":300,
            "EvaluationPeriods":1,
            "Threshold":{
               "Ref":"DurationThreshold"
            },
            "ComparisonOperator":"GreaterThanThreshold",
            "TreatMissingData":"ignore",
            "AlarmActions":[
               {
                  "Fn::ImportValue":{
                     "Fn::Sub":"${KeyStack}-ErrorTopicArn"
                  }
               }
            ]
         }
      }
   },
   "Outputs":{
      "CoreApiID":{
         "Value":{
            "Fn::Sub":"${ServerlessRestApi}"
         }
      },
      "ApiURL":{
         "Description":"API endpoint URL for Prod environment",
         "Value":{
            "Fn::Sub":"https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/prod/"
         }
      },
      "BixbyApiRoleArn":{
         "Description":"ARN of the role used by this API",
         "Value":{
            "Fn::GetAtt":[
               "BixbyApiRole",
               "Arn"
            ]
         }
      }
   }
}